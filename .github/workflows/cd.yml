name: CD

on:
  pull_request:
    branches: ["main"]
  workflow_dispatch: # 수동 패치 허용

jobs:
  build-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read

  deploy:
    runs-on: ubuntu-latest
    needs: build-test # build-test가 성공하면 실행
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # 기존 tmux 세션 종료
            tmux kill-session -t deploy_session || true

            # 새로운 tmux 세션 시작
            tmux new-session -d -s deploy_session

            # 백엔드 배포
            tmux send-keys -t deploy_session "cd ~/NBE4-5-2-Team04 && git pull origin main" C-m
            tmux send-keys -t deploy_session "cd backend" C-m

            # 기존 백엔드 프로세스 종료 (안 하면 여러 개 실행될 수 있음)
            tmux send-keys -t deploy_session "pkill -f 'project2-0.0.1-SNAPSHOT.jar' || true" C-m

            # 새로 빌드 후 실행
            tmux send-keys -t deploy_session "./gradlew build -x test -Dorg.gradle.jvmargs='-Xmx256m'" C-m
            tmux send-keys -t deploy_session "nohup java -Xms64m -Xmx128m -jar build/libs/project2-0.0.1-SNAPSHOT.jar > backend.log 2>&1 &" C-m

            # 프론트엔드 배포
            tmux send-keys -t deploy_session "cd ~/NBE4-5-2-Team04/frontend" C-m

            # 기존 프론트엔드 프로세스 종료
            tmux send-keys -t deploy_session "pkill -f 'npm start' || true" C-m

            # 빌드 후 실행
            tmux send-keys -t deploy_session "npm run build" C-m
            tmux send-keys -t deploy_session "nohup npm start > frontend.log 2>&1 &" C-m
